import re

def remove_comments_and_preprocessor(input_file, output_file, preserve_declarations=False, change_var_names=False, minify_code=False, add_line_numbers=False):
    try:
        with open(input_file, 'r') as input_f:
            code = input_f.read()

        
        code, single_line_comments = re.subn(r'\/\/[^\n]*', '', code)
        code, multi_line_comments = re.subn(r'\/\*.*?\*\/', '', code, flags=re.DOTALL)
        # Remove preprocessor directives
        code = re.sub(r'#\s*define[^\n]*', '', code)
        code = re.sub(r'#\s*ifndef[^\n]*', '', code)
        code = re.sub(r'#\s*endif[^\n]*', '', code)

        # Remove empty lines
        code = '\n'.join(line for line in code.split('\n') if line.strip())

        # Optionally change variable names
        if change_var_names:
            code = obfuscate_variable_names(code)

        # Optionally add line numbers
        if add_line_numbers:
            code = add_line_numbers_to_code(code)

        # Optionally preserve declarations
        if preserve_declarations:
            code = preserve_function_and_variable_declarations(code)

        # Optionally minify code
        if minify_code:
            code = minify_code_content(code)

        with open(output_file, 'w') as output_f:
            output_f.write(code)

        print(f"Comments and preprocessor directives removed and saved in '{output_file}'")
        print(f"Removed {single_line_comments + multi_line_comments} comments.")
    except FileNotFoundError:
        print("File not found.")
    except Exception as e:
        print(f"An error occurred: {str(e)}")

def obfuscate_variable_names(code):
    
    return code

def add_line_numbers_to_code(code):

    lines = code.split('\n')
    code_with_line_numbers = '\n'.join([f"{i + 1}: {line}" for i, line in enumerate(lines)])
    return code_with_line_numbers

def preserve_function_and_variable_declarations(code):
  
    return code

def minify_code_content(code):
   
    return code

if __name__ == "__main__":
    input_file = "input.c"  # Replace with the name of your input C file
    output_file = "output.c"  # Replace with the name of the output file

    remove_comments_and_preprocessor(input_file, output_file, preserve_declarations=True, change_var_names=True, minify_code=True, add_line_numbers=True)
